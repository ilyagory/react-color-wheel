{"ast":null,"code":"import _classCallCheck from \"/Users/tay/Desktop/codey/react-colour-wheel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tay/Desktop/codey/react-colour-wheel/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tay/Desktop/codey/react-colour-wheel/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tay/Desktop/codey/react-colour-wheel/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tay/Desktop/codey/react-colour-wheel/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tay/Desktop/codey/react-colour-wheel/src/App.js\";\nimport React, { Component } from 'react'; // react-colour-wheel:\n\nimport ColourWheel from './components/colourWheel/ColourWheel';\nvar yourDefaultColour = 'rgb(255, 255, 255)';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedColour: yourDefaultColour\n    };\n\n    _this.clearColourWheel = function () {\n      _this.colourWheel.clear(function () {\n        // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n        _this.setState({\n          selectedColour: yourDefaultColour\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedColour = this.state.selectedColour;\n      return React.createElement(\"div\", {\n        style: {\n          height: '100vh',\n          width: '100vw',\n          display: 'flex',\n          backgroundColor: '#394032',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"react-colour-wheel\"))), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          color: '#FFFFFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: selectedColour\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, selectedColour))), React.createElement(ColourWheel, {\n        radius: 200,\n        padding: 10,\n        lineWidth: 50,\n        onColourSelected: function onColourSelected(rgb) {\n          return _this2.setState({\n            selectedColour: rgb\n          });\n        },\n        onRef: function onRef(ref) {\n          return _this2.colourWheel = ref;\n        },\n        spacers: {\n          colour: '#FFFFFF',\n          shadowColour: 'grey',\n          shadowBlur: 5\n        },\n        preset: true // You can set this bool depending on whether you have a pre-selected colour in state.\n        ,\n        presetColour: this.state.selectedColour,\n        animated: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        onClick: this.clearColourWheel,\n        style: {\n          cursor: 'pointer',\n          fontSize: 20,\n          fontWeight: '500',\n          color: '#FFFFFF',\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"clear\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tay/Desktop/codey/react-colour-wheel/src/App.js"],"names":["React","Component","ColourWheel","yourDefaultColour","App","state","selectedColour","clearColourWheel","colourWheel","clear","setState","height","width","display","backgroundColor","flexDirection","justifyContent","alignItems","textAlign","color","rgb","ref","colour","shadowColour","shadowBlur","cursor","fontSize","fontWeight","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AAEA,IAAMC,iBAAiB,GAAG,oBAA1B;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,cAAc,EAAEH;AADV,K;;UAIRI,gB,GAAmB,YAAM;AACvB,YAAKC,WAAL,CAAiBC,KAAjB,CAAuB,YAAM;AAC3B;AACA,cAAKC,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAEH;AAAlB,SAAd;AACD,OAHD;AAID,K;;;;;;;6BAES;AAAA;;AAAA,UACAG,cADA,GACmB,KAAKD,KADxB,CACAC,cADA;AAGR,aACE;AACE,QAAA,KAAK,EAAE;AACLK,UAAAA,MAAM,EAAE,OADH;AAELC,UAAAA,KAAK,EAAE,OAFF;AAGLC,UAAAA,OAAO,EAAE,MAHJ;AAILC,UAAAA,eAAe,EAAE,SAJZ;AAKLC,UAAAA,aAAa,EAAE,QALV;AAMLC,UAAAA,cAAc,EAAE,QANX;AAOLC,UAAAA,UAAU,EAAE;AAPP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAJ,CADJ,CAXA,EAcE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAM,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAEb;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCA,cAAzC,CAAJ,CADF,CAdF,EAkBE,oBAAC,WAAD;AACE,QAAA,MAAM,EAAE,GADV;AAEE,QAAA,OAAO,EAAE,EAFX;AAGE,QAAA,SAAS,EAAE,EAHb;AAIE,QAAA,gBAAgB,EAAE,0BAACc,GAAD;AAAA,iBAAS,MAAI,CAACV,QAAL,CAAc;AAAEJ,YAAAA,cAAc,EAAEc;AAAlB,WAAd,CAAT;AAAA,SAJpB;AAKE,QAAA,KAAK,EAAE,eAAAC,GAAG;AAAA,iBAAK,MAAI,CAACb,WAAL,GAAmBa,GAAxB;AAAA,SALZ;AAME,QAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,SADD;AAEPC,UAAAA,YAAY,EAAE,MAFP;AAGPC,UAAAA,UAAU,EAAE;AAHL,SANX;AAWE,QAAA,MAAM,MAXR,CAWS;AAXT;AAYE,QAAA,YAAY,EAAE,KAAKnB,KAAL,CAAWC,cAZ3B;AAaE,QAAA,QAAQ,MAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,EAkCE;AACE,QAAA,OAAO,EAAE,KAAKC,gBADhB;AAEE,QAAA,KAAK,EAAE;AACLkB,UAAAA,MAAM,EAAE,SADH;AAELC,UAAAA,QAAQ,EAAE,EAFL;AAGLC,UAAAA,UAAU,EAAE,KAHP;AAILR,UAAAA,KAAK,EAAE,SAJF;AAKLS,UAAAA,SAAS,EAAE;AALN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlCF,CADF;AAgDD;;;;EA/De3B,S;;AAkElB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react'\n\n// react-colour-wheel:\nimport ColourWheel from './components/colourWheel/ColourWheel'\n\nconst yourDefaultColour = 'rgb(255, 255, 255)'\n\nclass App extends Component {\n  state = {\n    selectedColour: yourDefaultColour\n  }\n\n  clearColourWheel = () => {\n    this.colourWheel.clear(() => {\n      // Do some other stuff in this callback if you want -- other than re-setting your selectedColour.\n      this.setState({ selectedColour: yourDefaultColour })\n    })\n  }\n\n  render () {\n    const { selectedColour } = this.state\n\n    return (\n      <div\n        style={{\n          height: '100vh',\n          width: '100vw',\n          display: 'flex',\n          backgroundColor: '#394032',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n      <div>\n          <h1><span>react-colour-wheel</span></h1>\n      </div>\n        <div style={{ textAlign: 'center', color: '#FFFFFF' }}>\n          <h2><span style={{ color: selectedColour }}>{selectedColour}</span></h2>\n        </div>\n\n        <ColourWheel\n          radius={200}\n          padding={10}\n          lineWidth={50}\n          onColourSelected={(rgb) => this.setState({ selectedColour: rgb })}\n          onRef={ref => (this.colourWheel = ref)}\n          spacers={{\n            colour: '#FFFFFF',\n            shadowColour: 'grey',\n            shadowBlur: 5\n          }}\n          preset // You can set this bool depending on whether you have a pre-selected colour in state.\n          presetColour={this.state.selectedColour}\n          animated\n        />\n\n        <div\n          onClick={this.clearColourWheel}\n          style={{\n            cursor: 'pointer',\n            fontSize: 20,\n            fontWeight: '500',\n            color: '#FFFFFF',\n            marginTop: 20\n          }}>\n          clear\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}